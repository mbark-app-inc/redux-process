"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReduxProcess = void 0;
/**
 * An abstract class that pairs a redux action (performAction) with a "fraction" of a redux reducer (getNewState)
 * @typeParam Form                a type that is passed into the action when executed. If there is no form type, `null` can be used.
 * @typeParam PayloadValue        the type returned from performAction and the first argument passed into getNewState
 * @typeParam ProcessGroupState   the type of the process group
 * @typeParam GlobalState         the type of the full redux store state
 */
class ReduxProcess {
    /**
     * Create a new ReduxProcess
     */
    constructor(options) {
        this.options = options;
    }
    /**
     * Get the name of the action
     * @return
     */
    static getProcessKey() {
        return this.name;
    }
}
exports.ReduxProcess = ReduxProcess;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVkdXhQcm9jZXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1JlZHV4UHJvY2Vzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQTs7Ozs7O0dBTUc7QUFDSCxNQUFzQixZQUFZO0lBZ0JoQzs7T0FFRztJQUNILFlBQVksT0FBNEI7UUFDdEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUE7SUFDeEIsQ0FBQztJQWJEOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxhQUFhO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQTtJQUNsQixDQUFDO0NBOEJGO0FBNUNELG9DQTRDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElSZWR1eFByb2Nlc3MgfSBmcm9tICcuL2ludGVyZmFjZXMvSVJlZHV4UHJvY2VzcydcbmltcG9ydCB7IFJlZHV4UHJvY2Vzc09wdGlvbnMgfSBmcm9tICcuL3R5cGVzL1JlZHV4UHJvY2VzcydcblxuLyoqXG4gKiBBbiBhYnN0cmFjdCBjbGFzcyB0aGF0IHBhaXJzIGEgcmVkdXggYWN0aW9uIChwZXJmb3JtQWN0aW9uKSB3aXRoIGEgXCJmcmFjdGlvblwiIG9mIGEgcmVkdXggcmVkdWNlciAoZ2V0TmV3U3RhdGUpXG4gKiBAdHlwZVBhcmFtIEZvcm0gICAgICAgICAgICAgICAgYSB0eXBlIHRoYXQgaXMgcGFzc2VkIGludG8gdGhlIGFjdGlvbiB3aGVuIGV4ZWN1dGVkLiBJZiB0aGVyZSBpcyBubyBmb3JtIHR5cGUsIGBudWxsYCBjYW4gYmUgdXNlZC5cbiAqIEB0eXBlUGFyYW0gUGF5bG9hZFZhbHVlICAgICAgICB0aGUgdHlwZSByZXR1cm5lZCBmcm9tIHBlcmZvcm1BY3Rpb24gYW5kIHRoZSBmaXJzdCBhcmd1bWVudCBwYXNzZWQgaW50byBnZXROZXdTdGF0ZVxuICogQHR5cGVQYXJhbSBQcm9jZXNzR3JvdXBTdGF0ZSAgIHRoZSB0eXBlIG9mIHRoZSBwcm9jZXNzIGdyb3VwXG4gKiBAdHlwZVBhcmFtIEdsb2JhbFN0YXRlICAgICAgICAgdGhlIHR5cGUgb2YgdGhlIGZ1bGwgcmVkdXggc3RvcmUgc3RhdGVcbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFJlZHV4UHJvY2VzczxcbiAgRm9ybSxcbiAgUGF5bG9hZFZhbHVlLFxuICBQcm9jZXNzR3JvdXBTdGF0ZSxcbiAgR2xvYmFsU3RhdGVcbj4gaW1wbGVtZW50cyBJUmVkdXhQcm9jZXNzPEZvcm0sIFBheWxvYWRWYWx1ZSwgUHJvY2Vzc0dyb3VwU3RhdGUsIEdsb2JhbFN0YXRlPiB7XG4gIG9wdGlvbnM6IFJlZHV4UHJvY2Vzc09wdGlvbnNcblxuICAvKipcbiAgICogR2V0IHRoZSBuYW1lIG9mIHRoZSBhY3Rpb25cbiAgICogQHJldHVyblxuICAgKi9cbiAgc3RhdGljIGdldFByb2Nlc3NLZXkoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5uYW1lXG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIGEgbmV3IFJlZHV4UHJvY2Vzc1xuICAgKi9cbiAgY29uc3RydWN0b3Iob3B0aW9uczogUmVkdXhQcm9jZXNzT3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnNcbiAgfVxuXG4gIC8qKlxuICAgKiBBbiBhYnN0cmFjdCBtZXRob2QgdGhhdCBpcyBleGVjdXRlZCBhcyB0aGUgXCJhY3Rpb25cIiBpbiByZWR1eFxuICAgKiBAcGFyYW0gIGZvcm0gIHZhbHVlIHRoYXQgaXMgcGFzc2VkIGludG8gdGhlIGFjdGlvbiB3aGVuIGV4ZWN1dGVkXG4gICAqIEBwYXJhbSAgc3RvcmUgdGhlIGZ1bGwgcmVkdXggc3RvcmUgc3RhdGVcbiAgICogQHJldHVyblxuICAgKi9cbiAgYWJzdHJhY3QgcGVyZm9ybUFjdGlvbihcbiAgICBmb3JtOiBGb3JtLFxuICAgIHN0b3JlOiBHbG9iYWxTdGF0ZVxuICApOiBQYXlsb2FkVmFsdWUgfCBQcm9taXNlPFBheWxvYWRWYWx1ZT5cblxuICAvKipcbiAgICogUmV0dXJuIGEgbmV3IHN0YXRlIGZvciB0aGUgZ2l2ZW4gYWN0aW9uXG4gICAqIEBwYXJhbSAgcGF5bG9hZCAgdGhlIHZhbHVlIHRoYXQgd2FzIHJldHVybmVkIGZyb20gcGVyZm9ybUFjdGlvbiBtZXRob2RcbiAgICogQHBhcmFtICBvbGRTdGF0ZSB0aGUgb2xkIHN0YXRlIHRoYXRcbiAgICogQHJldHVybiAgICAgICAgICBhIG5ldyBzdGF0ZS4gVGhpcyBzaG91bGQgTk9UIGJlIGEgbW9kaWZpZWQgdmFsdWUgYnV0IGEgTkVXIHZhbHVlXG4gICAqL1xuICBhYnN0cmFjdCBnZXROZXdTdGF0ZShcbiAgICBwYXlsb2FkOiBQYXlsb2FkVmFsdWUsXG4gICAgb2xkU3RhdGU6IFByb2Nlc3NHcm91cFN0YXRlXG4gICk6IFByb2Nlc3NHcm91cFN0YXRlXG59XG4iXX0=