"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReduxProcess = void 0;
/**
 * An abstract class that pairs a redux action (performAction) with a "fraction" of a redux reducer (getNewState)
 * @typeParam Form                a type that is passed into the action when executed. If there is no form type, `null` can be used.
 * @typeParam PayloadValue        the type returned from performAction and the first argument passed into getNewState
 * @typeParam ProcessGroupState   the type of the process group
 * @typeParam GlobalState         the type of the full redux store state
 */
class ReduxProcess {
    /**
     * Create a new ReduxProcess
     */
    constructor(options) {
        this.options = options;
    }
    /**
     * Get the name of the action
     * @return
     */
    static getProcessKey() {
        return Math.random().toString(16).substr(2, 32);
    }
}
exports.ReduxProcess = ReduxProcess;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVkdXhQcm9jZXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1JlZHV4UHJvY2Vzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQTs7Ozs7O0dBTUc7QUFDSCxNQUFzQixZQUFZO0lBZ0JoQzs7T0FFRztJQUNILFlBQVksT0FBNEI7UUFDdEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUE7SUFDeEIsQ0FBQztJQWJEOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxhQUFhO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFBO0lBQ2pELENBQUM7Q0E4QkY7QUE1Q0Qsb0NBNENDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSVJlZHV4UHJvY2VzcyB9IGZyb20gJy4vaW50ZXJmYWNlcy9JUmVkdXhQcm9jZXNzJ1xuaW1wb3J0IHsgUmVkdXhQcm9jZXNzT3B0aW9ucyB9IGZyb20gJy4vdHlwZXMvUmVkdXhQcm9jZXNzJ1xuXG4vKipcbiAqIEFuIGFic3RyYWN0IGNsYXNzIHRoYXQgcGFpcnMgYSByZWR1eCBhY3Rpb24gKHBlcmZvcm1BY3Rpb24pIHdpdGggYSBcImZyYWN0aW9uXCIgb2YgYSByZWR1eCByZWR1Y2VyIChnZXROZXdTdGF0ZSlcbiAqIEB0eXBlUGFyYW0gRm9ybSAgICAgICAgICAgICAgICBhIHR5cGUgdGhhdCBpcyBwYXNzZWQgaW50byB0aGUgYWN0aW9uIHdoZW4gZXhlY3V0ZWQuIElmIHRoZXJlIGlzIG5vIGZvcm0gdHlwZSwgYG51bGxgIGNhbiBiZSB1c2VkLlxuICogQHR5cGVQYXJhbSBQYXlsb2FkVmFsdWUgICAgICAgIHRoZSB0eXBlIHJldHVybmVkIGZyb20gcGVyZm9ybUFjdGlvbiBhbmQgdGhlIGZpcnN0IGFyZ3VtZW50IHBhc3NlZCBpbnRvIGdldE5ld1N0YXRlXG4gKiBAdHlwZVBhcmFtIFByb2Nlc3NHcm91cFN0YXRlICAgdGhlIHR5cGUgb2YgdGhlIHByb2Nlc3MgZ3JvdXBcbiAqIEB0eXBlUGFyYW0gR2xvYmFsU3RhdGUgICAgICAgICB0aGUgdHlwZSBvZiB0aGUgZnVsbCByZWR1eCBzdG9yZSBzdGF0ZVxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUmVkdXhQcm9jZXNzPFxuICBGb3JtLFxuICBQYXlsb2FkVmFsdWUsXG4gIFByb2Nlc3NHcm91cFN0YXRlLFxuICBHbG9iYWxTdGF0ZVxuPiBpbXBsZW1lbnRzIElSZWR1eFByb2Nlc3M8Rm9ybSwgUGF5bG9hZFZhbHVlLCBQcm9jZXNzR3JvdXBTdGF0ZSwgR2xvYmFsU3RhdGU+IHtcbiAgb3B0aW9uczogUmVkdXhQcm9jZXNzT3B0aW9uc1xuXG4gIC8qKlxuICAgKiBHZXQgdGhlIG5hbWUgb2YgdGhlIGFjdGlvblxuICAgKiBAcmV0dXJuXG4gICAqL1xuICBzdGF0aWMgZ2V0UHJvY2Vzc0tleSgpOiBzdHJpbmcge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDE2KS5zdWJzdHIoMiwgMzIpXG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIGEgbmV3IFJlZHV4UHJvY2Vzc1xuICAgKi9cbiAgY29uc3RydWN0b3Iob3B0aW9uczogUmVkdXhQcm9jZXNzT3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnNcbiAgfVxuXG4gIC8qKlxuICAgKiBBbiBhYnN0cmFjdCBtZXRob2QgdGhhdCBpcyBleGVjdXRlZCBhcyB0aGUgXCJhY3Rpb25cIiBpbiByZWR1eFxuICAgKiBAcGFyYW0gIGZvcm0gIHZhbHVlIHRoYXQgaXMgcGFzc2VkIGludG8gdGhlIGFjdGlvbiB3aGVuIGV4ZWN1dGVkXG4gICAqIEBwYXJhbSAgc3RvcmUgdGhlIGZ1bGwgcmVkdXggc3RvcmUgc3RhdGVcbiAgICogQHJldHVyblxuICAgKi9cbiAgYWJzdHJhY3QgcGVyZm9ybUFjdGlvbihcbiAgICBmb3JtOiBGb3JtLFxuICAgIHN0b3JlOiBHbG9iYWxTdGF0ZVxuICApOiBQYXlsb2FkVmFsdWUgfCBQcm9taXNlPFBheWxvYWRWYWx1ZT5cblxuICAvKipcbiAgICogUmV0dXJuIGEgbmV3IHN0YXRlIGZvciB0aGUgZ2l2ZW4gYWN0aW9uXG4gICAqIEBwYXJhbSAgcGF5bG9hZCAgdGhlIHZhbHVlIHRoYXQgd2FzIHJldHVybmVkIGZyb20gcGVyZm9ybUFjdGlvbiBtZXRob2RcbiAgICogQHBhcmFtICBvbGRTdGF0ZSB0aGUgb2xkIHN0YXRlIHRoYXRcbiAgICogQHJldHVybiAgICAgICAgICBhIG5ldyBzdGF0ZS4gVGhpcyBzaG91bGQgTk9UIGJlIGEgbW9kaWZpZWQgdmFsdWUgYnV0IGEgTkVXIHZhbHVlXG4gICAqL1xuICBhYnN0cmFjdCBnZXROZXdTdGF0ZShcbiAgICBwYXlsb2FkOiBQYXlsb2FkVmFsdWUsXG4gICAgb2xkU3RhdGU6IFByb2Nlc3NHcm91cFN0YXRlXG4gICk6IFByb2Nlc3NHcm91cFN0YXRlXG59XG4iXX0=